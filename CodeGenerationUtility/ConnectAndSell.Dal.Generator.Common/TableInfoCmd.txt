
DROP TABLE IF EXISTS #ParentTableChildTable
CREATE TABLE #ParentTableChildTable
(
ParentTableName varchar(500)
,ChildTableName varchar(500)
)

DECLARE @docHandle int;  

EXEC sp_xml_preparedocument @docHandle OUTPUT, @xmltableInfo;  

INSERT #ParentTableChildTable   
SELECT *   
FROM OPENXML(@docHandle, N'/ROOT/T')   
  WITH #ParentTableChildTable;  
EXEC sp_xml_removedocument @docHandle;



DROP TABLE IF EXISTS #AllTable
CREATE TABLE #AllTable
(
TableName VARCHAR(500)
)

INSERT INTO #AllTable (TableName)
SELECT ParentTableName
FROM #ParentTableChildTable
UNION 
SELECT ChildTableName
FROM #ParentTableChildTable


DROP TABLE IF EXISTS #FKTEMP 
CREATE TABLE #FKTEMP 
(
 FKName VARCHAR(500)
 ,ParentTableName VARCHAR(500)
 ,ChildTableName VARCHAR(500)
 ,ParentColumnName VARCHAR(500)
 ,ChildColumnName VARCHAR(500)
)

DROP TABLE IF EXISTS #UNIQUEINDEX
CREATE TABLE #UNIQUEINDEX
(
UniqueIndexName VARCHAR(500)
,UniqueIndexTableName VARCHAR(500)
,UniqueIndexColumnOrder INT
,UniqueIndexColumnName VARCHAR(500)
)
INSERT INTO #UNIQUEINDEX(UniqueIndexName,UniqueIndexTableName,UniqueIndexColumnOrder,UniqueIndexColumnName)
select 
    i.name as IndexName, 
    o.name as TableName, 
    ic.key_ordinal as ColumnOrder,
    co.[name] as ColumnName
from sys.indexes i 
join sys.objects o on i.object_id = o.object_id
join sys.index_columns ic on ic.object_id = i.object_id 
    and ic.index_id = i.index_id
join sys.columns co on co.object_id = i.object_id 
    and co.column_id = ic.column_id
where 
--i.[type] = 2 
i.is_unique = 1 
--and i.is_primary_key = 0
and o.[type] = 'U'
--and o.name='SXARCMChargeTransaction'
--and ic.is_included_column = 0
--order by o.[name], i.[name], ic.is_included_column, ic.key_ordinal
UNION 
SELECT C2.CONSTRAINT_NAME, C2.TABLE_NAME, KCU2.ORDINAL_POSITION, KCU2.COLUMN_NAME
FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS C2 
       INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU2 
       ON C2.CONSTRAINT_SCHEMA = KCU2.CONSTRAINT_SCHEMA 
       AND C2.CONSTRAINT_NAME = KCU2.CONSTRAINT_NAME 

;

INSERT INTO #FKTEMP
(
FKName
,ParentTableName 
,ChildTableName 
,ParentColumnName 
,ChildColumnName 
)

SELECT 
    C.CONSTRAINT_NAME AS  'FKName'
   ,C2.UniqueIndexTableName AS 'ParentTableName'
   ,C.TABLE_NAME AS 'ChildTableName' 
,C2.UniqueIndexColumnName AS 'ParentColumnName'
 ,KCU.COLUMN_NAME AS 'ChildColumnName'
FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS C 
       INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU 
         ON C.CONSTRAINT_SCHEMA = KCU.CONSTRAINT_SCHEMA 
            AND C.CONSTRAINT_NAME = KCU.CONSTRAINT_NAME 
       INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC 
         ON C.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA 
            AND C.CONSTRAINT_NAME = RC.CONSTRAINT_NAME 
		INNER JOIN #UNIQUEINDEX C2 ON
			C2.UniqueIndexName = RC.UNIQUE_CONSTRAINT_NAME 
			AND C2.UniqueIndexColumnOrder =KCU.ORDINAL_POSITION
		INNER JOIN #ParentTableChildTable PC ON PC.ParentTableName = C2.UniqueIndexTableName
		AND PC.ChildTableName = C.TABLE_NAME
WHERE  C.CONSTRAINT_TYPE = 'FOREIGN KEY'
ORDER BY C.TABLE_NAME,C.CONSTRAINT_NAME 

SELECT O.ParentTableName,O.ChildTableName, O.FKName
,
STUFF (
(
SELECT ',' + ParentColumnName FROM #FKTEMP PKC WHERE PKC.FKName = O.FKName 
FOR XML PATH ('')
)
,1,1, '') AS 'ParentTableFKColumnNames'
,
STUFF (
(
SELECT ',' + ChildColumnName FROM #FKTEMP PKC WHERE PKC.FKName = O.FKName 
FOR XML PATH ('')
)
,1,1, '') AS 'ChildTableFKColumnNames'
FROM #FKTEMP O
GROUP BY ParentTableName,ChildTableName, O.FKName


SELECT  c.TABLE_NAME
, c.COLUMN_NAME
,c.DATA_TYPE
, c.Column_default
, c.character_maximum_length
, c.numeric_precision
, c.NUMERIC_SCALE
, c.DATETIME_PRECISION
, c.is_nullable
,CASE WHEN pk.COLUMN_NAME IS NOT NULL THEN 'PRIMARY KEY' ELSE '' END AS KeyType
, pk.ORDINAL_POSITION AS 'PKColumnOrdinalPostion'
, COLUMNPROPERTY(object_id(c.TABLE_SCHEMA+'.'+c.TABLE_NAME), c.COLUMN_NAME, 'IsIdentity') AS 'IsIdentity'
FROM INFORMATION_SCHEMA.COLUMNS c
LEFT JOIN (
            SELECT ku.TABLE_CATALOG,ku.TABLE_SCHEMA,ku.TABLE_NAME,ku.COLUMN_NAME, ku.ORDINAL_POSITION
            FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc
            INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS ku
                ON tc.CONSTRAINT_TYPE = 'PRIMARY KEY' 
                AND tc.CONSTRAINT_NAME = ku.CONSTRAINT_NAME
         )   pk 
ON  c.TABLE_CATALOG = pk.TABLE_CATALOG
            AND c.TABLE_SCHEMA = pk.TABLE_SCHEMA
            AND c.TABLE_NAME = pk.TABLE_NAME
            AND c.COLUMN_NAME = pk.COLUMN_NAME
INNER JOIN #AllTable ATN ON ATN.TableName = c.TABLE_NAME
ORDER BY c.TABLE_SCHEMA,c.TABLE_NAME, c.ORDINAL_POSITION

select 
    i.name as IndexName, 
    o.name as TableName, 
    ic.key_ordinal as ColumnOrder,
    co.[name] as ColumnName
from sys.indexes i 
join sys.objects o on i.object_id = o.object_id
join sys.index_columns ic on ic.object_id = i.object_id 
    and ic.index_id = i.index_id
join sys.columns co on co.object_id = i.object_id 
    and co.column_id = ic.column_id
where 
i.is_unique = 1 
and i.is_primary_key = 0
and o.[type] = 'U'

